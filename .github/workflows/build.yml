name: Test on Multiple OS and Browsers

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  browser-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [18, 20, 22]
        browser: [chrome-latest, firefox-latest, safari-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix['node-version'] }}

      - name: Install dependencies
        run: npm ci

      - name: Testing on OS (${{ matrix.os }}) with Node.js (version ${{ matrix.node-version }})
        env:
          BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
          BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
        shell: bash
        run: |
          echo "Running tests on Node.js ${{ matrix.node-version }}, OS ${{ matrix.os }}, Browser ${{ matrix.browser }}"

          run_tests() {
            case "${{ matrix.browser }}" in
              chrome-latest)
                npm run js-test-karma -- --browsers=ChromeHeadless
                ;;
              firefox-latest)
                npm run js-test-karma -- --browsers=FirefoxHeadless
                ;;
              safari-latest)
                if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
                  npm run js-test-karma -- --browsers=Safari
                else
                  echo "Safari only runs on macOS or via BrowserStack"
                  return 0
                fi
                ;;
              *)
                echo "Unknown browser: ${{ matrix.browser }}"
                return 1
                ;;
            esac
          }

          max_attempts=9
          for attempt in $(seq 1 $max_attempts); do
            echo "Attempt #$attempt"
            if run_tests; then
              echo "Tests passed on attempt #$attempt"
              break
            else
              echo "Tests failed on attempt #$attempt"
              if [[ "$attempt" -eq "$max_attempts" ]]; then
                echo "All $max_attempts attempts failed"
                exit 1
              fi
              echo "Retrying..."
              sleep 5
            fi
          done
